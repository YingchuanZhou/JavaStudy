<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mapper.TeacherMapper">


<!--    按照结果嵌套查询-->
    <select id="getTeacher" resultMap="TeacherStudent">
        select t.id tid, t.name tname ,s.id sid, s.name sname
        from student s, teacher t
        where s.tid= t.id and t.id = #{tid}
    </select>

    <resultMap id="TeacherStudent" type="Teacher">
        <result property="id" column="tid"/>
        <result property="name" column="tname"/>
 <!--
        复杂属性需要单独处理
            对象：association
            集合：collection
        javaType=""   指定属性类型
        集合中的泛型信息，我们使用ofType=""获取
-->
        <collection property="students" ofType="Student">
            <result property="id" column="sid"/>
            <result property="name" column="sname"/>
            <result property="tid" column="tid"/>
        </collection>
    </resultMap>



<!--    =================================================-->

<!--    按照查询嵌套查询-->
    <select id="getTeacher2" resultMap="TeacherStudent2">
        select * from teacher where id = #{tid}
    </select>

    <resultMap id="TeacherStudent2" type="Teacher">
        <result property="id" column="id"/>
        <result property="name" column="name"/>
<!--        javaType中为实体类中的属性类型     ofType为返回的泛型类型-->
        <collection property="students" javaType="ArrayList" ofType="Student" select="getStudentByTeacherId" column="tid"/>
    </resultMap>

    <select id="getStudentsByTeacherId" resultType="Student">
        select * from student where tid = #{tid}
    </select>
</mapper>